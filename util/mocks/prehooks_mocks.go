// Automatically generated by MockGen. DO NOT EDIT!
// Source: ./hooks/prehooks.go

package mocks

import (
	gomock "code.google.com/p/gomock/gomock"
)

// Mock of Compressor interface
type MockCompressor struct {
	ctrl     *gomock.Controller
	recorder *_MockCompressorRecorder
}

// Recorder for MockCompressor (not exported)
type _MockCompressorRecorder struct {
	mock *MockCompressor
}

func NewMockCompressor(ctrl *gomock.Controller) *MockCompressor {
	mock := &MockCompressor{ctrl: ctrl}
	mock.recorder = &_MockCompressorRecorder{mock}
	return mock
}

func (_m *MockCompressor) EXPECT() *_MockCompressorRecorder {
	return _m.recorder
}

func (_m *MockCompressor) Compress(filepath string) (string, error) {
	ret := _m.ctrl.Call(_m, "Compress", filepath)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCompressorRecorder) Compress(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Compress", arg0)
}
